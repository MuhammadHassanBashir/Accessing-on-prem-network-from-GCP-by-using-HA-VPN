HA-VPN Commands
----------------

      144 gcloud compute networks create vpc --bgp-routing-mode=global   --subnet-mode=custom
      145  gcloud compute firewall-rules create allow-icmp-ssh --network vpc   --allow tcp:22,icmp
      146  gcloud compute firewall-rules create allow-icmp-ssh1 --network vpc   --allow tcp:22,icmp
      147  gcloud compute networks subnets create ew1-subnet --network=vpc   --range=10.0.1.0/24 --region=europe-west1
      148  gcloud compute networks subnets create ew1-subnet --network=vpc   --range=10.0.1.0/24 --region=us-central1
      149  gcloud compute networks subnets create ew1-subnet --network=vpc   --range=10.0.1.0/24 --regiongcloud compute networks subnets delete ew1-subnet --region=europe-west1=europe-west1
      150  gcloud compute networks subnets delete ew1-subnet --region=europe-west1=europe-west1
      151* gcloud compute networks subnets delete ew1-subnet --region=us-central1
      152  gcloud compute networks subnets create ew1-subnet --network=vpc   --range=10.0.1.0/24 --region=us-central1
      153  history
      154  gcloud compute vpn-gateways create gcp-to-onprem   --network=vpc   --region=us-central1
      155  gcloud compute vpn-gateways delete gcp-to-onprem   --network=vpc   --region=us-central1
      156  gcloud compute vpn-gateways delete gcp-to-onprem   --network=default   --region=us-central1
      157  gcloud compute vpn-gateways delete gcp-to-onprem  
      158  gcloud compute vpn-gateways delete gcp-to-onprem  --region=us-central1
      159  gcloud compute vpn-tunnels delete tunnel-0
      160  gcloud compute vpn-tunnels delete tunnel-1 --region=us-central1
      161  gcloud compute vpn-gateways delete gcp-to-onprem --region=us-central1
      162  gcloud compute vpn-gateways create gcp-to-onprem   --network=vpc   --region=us-central1
      163  gcloud compute external-vpn-gateways create onprem-vpn-gateway   --interfaces 0=34.35.43.205
      164  gcloud compute external-vpn-gateways delete onprem-vpn-gateway   --interfaces 0=34.35.43.205
      165  gcloud compute external-vpn-gateways delete onprem-vpn-gateway 
      166  gcloud compute external-vpn-gateways delete onprem-vpn-gateway   --interfaces 0=34.35.43.205
      167  gcloud compute external-vpn-gateways create onprem-vpn-gateway --interfaces 0=34.35.43.205
      168  gcloud compute routers create vpn-router   --region=us-central1   --network=vpc   --asn=64512
      169  gcloud compute routers create vpn-router   --region=us-central1  
      170  gcloud compute routers create vpn-router --region=us-central1  
      171  gcloud compute routers delete vpn-router --region=us-central1  
      172  gcloud compute routers create vpn-router   --region=us-central1   --network=vpc   --asn=64512
      173  gcloud compute routers update vpn-router    --advertisement-mode custom    --region=us-central1    --set-advertisement-groups all_subnets    --set-advertisement-ranges 10.0.1.0/24
      174  gcloud compute vpn-tunnels create tunnel-0   --peer-external-gateway=onprem-vpn-gateway   --peer-external-gateway-interface=0    --region=us-central1   --ike-version=2   --shared-secret=changeme-ike-secret   --router=vpn-router   --vpn-gateway=gcp-to-onprem   --interface=0
      175  gcloud compute vpn-tunnels create tunnel-1   --peer-external-gateway=onprem-vpn-gateway   --peer-external-gateway-interface=0   --region=us-central1   --ike-version=2   --shared-secret=changeme-ike-secret   --router=vpn-router   --vpn-gateway=gcp-to-onprem   --interface=1
      176  gcloud compute routers add-interface vpn-router   --interface-name=vpn-if-0 --vpn-tunnel=tunnel-0   --ip-address=169.254.1.2 --mask-length=30 --region=us-central1
      177  gcloud compute routers add-bgp-peer vpn-router   --peer-name=bgp-tunnel-0   --peer-asn=65534   --interface=vpn-if-0   --peer-ip-address=169.254.1.1   --region=us-central1
      178  gcloud compute routers add-interface vpn-router   --interface-name=vpn-if-1 --vpn-tunnel=tunnel-1   --ip-address=169.254.1.6 --mask-length=30 --region=us-central1
      179  gcloud compute routers add-bgp-peer vpn-router   --peer-name=bgp-tunnel-1   --peer-asn=65534   --interface=vpn-if-1   --peer-ip-address=169.254.1.5   --region=us-central1
      180  gcloud compute instances create test-ha-vpn --zone=us-central-1c --machine-type=f1-micro --subnet=ew1-subnet --create-disk=image=projects/debian-cloud/global/images/debian-10-buster-v20220118,mode=rw,size=10,type=projects/vpn-lab-foobar-0/zones/europe-west1-b/diskTypes/pd-balanced --metadata=startup-script='#! /bin/bash
      apt update
      apt -y install apache2 iproute2 iputils-ping dnsutils'
      181  gcloud compute instances create test-ha-vpn --zone=us-central1-c --machine-type=f1-micro --subnet=ew1-subnet --create-disk=image=projects/debian-cloud/global/images/debian-10-buster-v20220118,mode=rw,size=10,type=projects/vpn-lab-foobar-0/zones/europe-west1-b/diskTypes/pd-balanced --metadata=startup-script='#! /bin/bash
      apt update
      apt -y install apache2 iproute2 iputils-ping dnsutils'
      182  gcloud compute instances create test-ha-vpn --zone=us-central1-c --machine-type=f1-micro --subnet=ew1-subnet --create-disk=image=projects/debian-cloud/global/images/debian-10-buster-v20220118,mode=rw,size=10,type=projects/vpn-lab-foobar-0/zones/europe-west1-b/diskTypes/pd-ssd --metadata=startup-script='#! /bin/bash
      apt update
      apt -y install apache2 iproute2 iputils-ping dnsutils'
      183  gcloud compute instances create test-ha-vpn --zone=us-central1-c --machine-type=f1-micro --subnet=ew1-subnet --create-disk=image=projects/debian-cloud/global/images/debian-10-buster-v20220118,mode=rw,size=10,type=projects/world-learning-400909/zones/europe-west1-b/diskTypes/pd-balanced --metadata=startup-script='#! /bin/bash
      apt update
      apt -y install apache2 iproute2 iputils-ping dnsutils'

On-Prem VPN Commands
--------------------
      
      Local System or GCP local Vm end Commands
      
      
      
      174 sudo apt update
      175 sudo apt install nginx strongswan libstrongswan-standard-plugins iproute2 -y
       176  sudo ufw allow from 10.0.0.0/8
        177  sudo ufw allow from 169.254.0.0/16
        178  sudo ufw allow from 172.16.0.0/12
        179  sudo ufw allow from 34.35.43.205/16
        180  sudo ufw allow from 10.0.1.0/24
        181  sudo ufw allow 500/udp
        182  sudo ufw allow ssh
        183  sudo ufw default deny incoming
        184  sudo ufw --force enable
        185  rm /var/www/html/* && echo "Greetings from $(curl -s ifconfig.me)!" >>/var/www/html/index.html
        186  cat var/www/html/index.html
        187  cat /var/www/html/index.html
        188  curl -s -L https://github.com/coredns/coredns/releases/download/v1.8.7/coredns_1.8.7_linux_amd64.tgz | tar xz -C /usr/bin
        189  cat <<'EOF' >/etc/ipsec.secrets
       : PSK "changeme-ike-secret"
      EOF
      
        190  cat /etc/ipsec.secrets
        191  apt update
        192  apt install nginx strongswan libstrongswan-standard-plugins \ 
        193  sudo apt install nginx strongswan libstrongswan-standard-plugins iproute2 -y
        194  cat <<'EOF' >/etc/ipsec.conf
      conn %default
        ikelifetime=600m
        keylife=180m
        rekeymargin=3m
        keyingtries=3
        keyexchange=ikev2
        mobike=no
        ike=aes256gcm16-sha512-modp2048
        esp=aes256gcm16-sha512-modp8192
        authby=psk
        left=%any
        leftid=%any
        leftsubnet=0.0.0.0/0
        leftauth=psk
        rightauth=psk
        rightsubnet=0.0.0.0/0
        type=tunnel
        auto=start
        dpdaction=restart
        closeaction=restart
        mark=%unique
      conn gcp
        leftupdown="/var/lib/strongswan/ipsec-vti.sh 0 169.254.1.2/30 169.254.1.1/30"
        right=34.157.101.116          #ipaddress of vpn gateway interface0
      
        rightid=34.157.101.116
      conn gcp2
        leftupdown="/var/lib/strongswan/ipsec-vti.sh 1 169.254.1.6/30 169.254.1.5/30"
        left=%any
        right=35.220.91.217   #ipaddress of vpn gateway interface1
      
        rightid=35.220.91.217
      EOF
      
        195  cat <<'EOF' >/etc/strongswan.d/vti.conf
      charon {
        install_routes = no
      }
      EOF
      
        196  cat <<'EOF' >/var/lib/strongswan/ipsec-vti.sh
      #!/bin/bash
      
      # Copyright 2022 Google LLC
      
      #
      
      # Licensed under the Apache License, Version 2.0 (the "License");
      
      # you may not use this file except in compliance with the License.
      
      # You may obtain a copy of the License at
      
      #
      
      #      https://www.apache.org/licenses/LICENSE-2.0
      
      #
      
      # Unless required by applicable law or agreed to in writing, software
      
      # distributed under the License is distributed on an "AS IS" BASIS,
      
      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      
      # See the License for the specific language governing permissions and
      
      # limitations under the License.
      
      
      # originally published at
      
      # https://cloud.google.com/community/tutorials/using-cloud-vpn-with-strongswan
      
      
      set -o nounset
      set -o errexit
      
      IP=$(which ip)
      
      PLUTO_MARK_OUT_ARR=(${PLUTO_MARK_OUT//// })
      PLUTO_MARK_IN_ARR=(${PLUTO_MARK_IN//// })
      
      VTI_TUNNEL_ID=${1}
      VTI_REMOTE=${2}
      VTI_LOCAL=${3}
      
      LOCAL_IF="${PLUTO_INTERFACE}"
      VTI_IF="vti${VTI_TUNNEL_ID}"
      # GCP's MTU is 1460
      
      GCP_MTU="1460"
      # ipsec overhead is 73 bytes, we need to compute new mtu.
      
      VTI_MTU=$((GCP_MTU-73))
      
      case "${PLUTO_VERB}" in
          up-client)
              sudo ${IP} link add ${VTI_IF} type vti local ${PLUTO_ME} remote ${PLUTO_PEER} okey ${PLUTO_MARK_OUT_ARR[0]} ikey ${PLUTO_MARK_IN_ARR[0]}
              sudo ${IP} addr add ${VTI_LOCAL} remote ${VTI_REMOTE} dev "${VTI_IF}"
              sudo ${IP} link set ${VTI_IF} up mtu ${VTI_MTU}
      
              # Disable IPSEC Policy
      
              sudo /sbin/sysctl -w net.ipv4.conf.${VTI_IF}.disable_policy=1
      
              # Enable loosy source validation, if possible. Otherwise disable validation.
      
              sudo /sbin/sysctl -w net.ipv4.conf.${VTI_IF}.rp_filter=2 || sysctl -w net.ipv4.conf.${VTI_IF}.rp_filter=0
      
              # If you would like to use VTI for policy-based you shoud take care of routing by yourselv, e.x.
      
              if [[ "${PLUTO_PEER_CLIENT}" != "0.0.0.0/0" ]]; then
                  ${IP} r add "${PLUTO_PEER_CLIENT}" dev "${VTI_IF}"
              fi
              ;;
          down-client)
              sudo ${IP} tunnel del "${VTI_IF}"
              ;;
      esac
      
      # Enable IPv4 forwarding
      
      sudo /sbin/sysctl -w net.ipv4.ip_forward=1
      
      # Disable IPSEC Encryption on local net
      
      sudo /sbin/sysctl -w net.ipv4.conf.${LOCAL_IF}.disable_xfrm=1
      sudo /sbin/sysctl -w net.ipv4.conf.${LOCAL_IF}.disable_policy=1
      EOF
      
        197  cat <<'EOF' >/etc/frr/frr.conf
      frr defaults traditional
      hostname vpngw
      log syslog informational
      no ipv6 forwarding
      service integrated-vtysh-config
      !
      router bgp 65534
      neighbor 169.254.1.2 remote-as 64512
      neighbor 169.254.1.6 remote-as 64512
      !
      address-family ipv4 unicast
        redistribute connected
        neighbor 169.254.1.2 route-map gcp in
        neighbor 169.254.1.2 route-map gcp out
        neighbor 169.254.1.6 route-map gcp in
        neighbor 169.254.1.6 route-map gcp out
      exit-address-family
      !
      route-map gcp permit 10
      !
      line vty
      !
      EOF
      
        198  cat <<'EOF' >/etc/frr/daemons
      bgpd=yes
      ospfd=no
      ospf6d=no
      ripd=no
      ripngd=no
      isisd=no
      pimd=no
      ldpd=no
      nhrpd=no
      eigrpd=no
      babeld=no
      sharpd=no
      pbrd=no
      bfdd=no
      fabricd=no
      vrrpd=no
      vtysh_enable=yes
      zebra_options="  -A 127.0.0.1 -s 90000000"
      bgpd_options="   -A 127.0.0.1"
      EOF
      
        199  cat <<'EOF' >/lib/systemd/system/coredns.service
      [Unit]
      Description=CoreDNS DNS server
      Documentation=https://coredns.io
      After=network.target
      [Service]
      PermissionsStartOnly=true
      LimitNOFILE=1048576
      LimitNPROC=512
      CapabilityBoundingSet=CAP_NET_BIND_SERVICE
      AmbientCapabilities=CAP_NET_BIND_SERVICE
      NoNewPrivileges=true
      User=root
      WorkingDirectory=~
      ExecStart=/usr/bin/coredns -conf=/etc/coredns/Corefile
      ExecReload=/bin/kill -SIGUSR1 $MAINPID
      Restart=on-failure
      [Install]
      WantedBy=multi-user.target
      EOF
      
        200  mkdir /etc/coredns
        201  cat <<'EOF' >/etc/coredns/Corefile
      . {
          hosts /etc/coredns/onprem-hosts onprem.example.com {
              127.0.0.1   localhost.onprem.example.com localhost
          }
          reload
          log
          errors
      }
      EOF
      
        202  cat <<'EOF' >/etc/coredns/onprem-hosts
      127.0.0.10 ten
      EOF
      
        203  chmod +x /var/lib/strongswan/ipsec-vti.sh
        204  systemctl enable coredns.service
        205  service coredns restart
        206  service strongswan-starter restart
        207  service frr restart

Below are verfication command
-----------------------------

  
    208  sudo ipsec status
    209  sudo ipsec statusall
    210  sudo systemctl status strongswan
    211  sudo journalctl -u strongswan
    212  ip route show
    213  sudo apt update
    214  sudo apt install --reinstall strongswan
    215  ls /lib/systemd/system/strongswan*
    216  sudo systemctl status strongswan
    217  cat /lib/systemd/system/strongswan-starter.service
    218  sudo systemctl daemon-reload
    219  sudo systemctl start strongswan-starter
    220  sudo systemctl enable strongswan-starter
    221  sudo systemctl status strongswan-starter
    222  sudo journalctl -u strongswan-starter
